Vagrant.configure(2) do |config|
  config.vm.define :summit_rhel_deploy_target do | summit_rhel_deploy_target |
    summit_rhel_deploy_target.vm.box = "rhel-atomic-7"
    summit_rhel_deploy_target.vm.hostname = "summit-rhel-deploy-target"
    summit_rhel_deploy_target.vm.synced_folder ".", "/vagrant", disabled: true
    summit_rhel_deploy_target.vm.synced_folder ".", "/home/vagrant/sync", type: "rsync",
                          rsync__exclude: [ ".git/", ".#*", "*~" ]

    # subscription manager stuff (only if vagrant-registration plugin is installed)
    if Vagrant.has_plugin?('vagrant-registration')
      if ENV['SUB_USERNAME'] then summit_rhel_deploy_target.registration.username = ENV['SUB_USERNAME'] end
      if ENV['SUB_PASSWORD'] then summit_rhel_deploy_target.registration.password = ENV['SUB_PASSWORD'] end
    end                          

    #move files to the right dirs, this handles the sorta-local repo
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo cat /home/vagrant/sync/hosts >> /etc/hosts"

    #perform update to pull updates from the repo we just added
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo atomic host upgrade"

    #reload (performs reboot) after doing the update
    summit_rhel_deploy_target.vm.provision :reload

    #ensure docker is configured correctly to be run by vagrant user
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo systemctl stop docker > /dev/null 2>&1 || :" #in case this isn't first run
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo groupadd docker > /dev/null 2>&1 || :"
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo usermod -a -G docker vagrant"
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo systemctl enable docker && sudo systemctl start docker"
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo chown root:docker /var/run/docker.sock"

    #setup kubernetes
    summit_rhel_deploy_target.vm.provision 'shell', inline: "for i in kube-apiserver.service kube-controller-manager.service kubelet.service kube-proxy.service kube-scheduler.service etcd; do sudo systemctl restart $i; done"
    summit_rhel_deploy_target.vm.provision 'shell', inline: "sudo kubectl get minions"

    #pre-cache docker images
    summit_rhel_deploy_target.vm.provision 'shell', inline: "docker pull rhel"
    summit_rhel_deploy_target.vm.provision 'shell', inline: "docker pull registry.access.redhat.com/rhel:7.1-6"

    #start docker registry
    summit_rhel_deploy_target.vm.provision 'shell', inline: "echo 'TODO: start docker registry'"
    summit_rhel_deploy_target.vm.provision 'shell', inline: "echo 'Now registry on dev host, under lab3'"

  end
  config.vm.define :summit_rhel_dev do | summit_rhel_dev |
    summit_rhel_dev.vm.box = "rhel-server-7"
    summit_rhel_dev.vm.hostname = "summit-rhel-dev"
    summit_rhel_dev.vm.synced_folder ".", "/vagrant", disabled: true
    summit_rhel_dev.vm.synced_folder ".", "/home/vagrant/sync", type: "rsync",
                        rsync__exclude: [ ".git/", ".#*", "*~" ]

    # we don't need to register this VM (going to use custom repos)
    if Vagrant.has_plugin?('vagrant-registration')
      summit_rhel_dev.registration.skip = true
    end

    #move files to the right dirs, this handles the sorta-local repo
    summit_rhel_dev.vm.provision 'shell', inline: "sudo rm -rf /etc/yum.repos.d/* && " \
                                                  "sudo mv /home/vagrant/sync/local.repo /etc/yum.repos.d/"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo cat /home/vagrant/sync/hosts >> /etc/hosts"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo yum clean all && sudo yum repolist"

    #perform update to pull updates from the repo we just added
    summit_rhel_dev.vm.provision 'shell', inline: "sudo yum update -y"

    #reload (performs reboot) after doing the update
    summit_rhel_dev.vm.provision :reload

    #ensure docker is configured correctly to be run by vagrant user
    summit_rhel_dev.vm.provision 'shell', inline: "sudo systemctl stop docker > /dev/null 2>&1 || :" #in case this isn't first run
    summit_rhel_dev.vm.provision 'shell', inline: "sudo groupadd docker > /dev/null 2>&1 || :"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo usermod -a -G docker vagrant"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo systemctl enable docker && sudo systemctl start docker"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo chown root:docker /var/run/docker.sock"

    # setup for lab1
    summit_rhel_dev.vm.provision 'shell', inline: "sudo mkdir -vp /root/Dockerfiles && cp -Rv /home/vagrant/sync/lab1 /root/Dockerfiles"

    #pre-cache docker images
    summit_rhel_dev.vm.provision 'shell', inline: "docker pull rhel"
    summit_rhel_dev.vm.provision 'shell', inline: "docker pull registry.access.redhat.com/rhel:7.1-6"

    #Setting up kubernetes
    summit_rhel_dev.vm.provision 'shell', inline: "sudo yum -y install kubernetes etcd"
    summit_rhel_dev.vm.provision 'shell', inline: "for i in kube-apiserver.service kube-controller-manager.service kubelet.service kube-proxy.service kube-scheduler.service etcd; do sudo systemctl restart $i; done"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo kubectl get minions"
    
    # setup for lab3
    summit_rhel_dev.vm.provision 'shell', inline: "sudo yum -y install atomic"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo yum -y install docker-registry"
    summit_rhel_dev.vm.provision 'shell', inline: "sudo systemctl enable docker-registry && sudo systemctl start docker-registry"
    summit_rhel_dev.vm.provision 'shell', inline: "echo 'TODO: add localhost as insecure or do it in lab3'"

    # setup for lab4
    summit_rhel_dev.vm.provision 'shell', inline: "sudo yum -y install net-tools bind-utils"


    #get latest lab files from remote 
    summit_rhel_dev.vm.provision 'shell', inline: "echo 'TODO: get the latest lab files'"

  end
end
